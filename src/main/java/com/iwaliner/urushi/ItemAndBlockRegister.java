package com.iwaliner.urushi;

import com.iwaliner.urushi.Block.*;
import com.iwaliner.urushi.Item.*;
import com.iwaliner.urushi.World.*;
import net.minecraft.block.*;
import net.minecraft.block.material.Material;
import net.minecraft.block.material.MaterialColor;
import net.minecraft.entity.EntityType;
import net.minecraft.fluid.Fluids;
import net.minecraft.item.*;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.IBlockReader;
import net.minecraftforge.common.ToolType;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

import java.util.Objects;
import java.util.function.Supplier;

public class ItemAndBlockRegister {
    private static final DeferredRegister<Item> ITEMS = DeferredRegister.create(ForgeRegistries.ITEMS, ModCore_Urushi.MOD_ID);
    private static final DeferredRegister<Block> BLOCKS= DeferredRegister.create(ForgeRegistries.BLOCKS, ModCore_Urushi.MOD_ID);
    public static final RegistryObject<Block> Sikkui = B("plaster", () -> {return new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SikkuiSlab = B("plaster_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SikkuiStairs = B("plaster_stairs", () -> {return new StairsBlock(((Block)Sikkui.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> sikkui_bars= B("plaster_bars", () -> {return new BarsBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 3.0F).requiresCorrectToolForDrops());});
    public static final RegistryObject<Block> OakFramedSikkui = B("oak_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SpruceFramedSikkui = B("spruce_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> BirchFramedSikkui = B("birch_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> JungleFramedSikkui = B("jungle_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> AcaciaFramedSikkui = B("acacia_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> DarkOakFramedSikkui = B("dark_oak_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> JapaneseApricotFramedSikkui = B("japanese_apricot_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SakuraFramedSikkui = B("sakura_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> CypressFramedSikkui = B("cypress_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> JapaneseCedarFramedSikkui = B("japanese_cedar_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> RedUrushiFramedSikkui = B("red_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> BlackUrushiFramedSikkui = B("black_framed_plaster", () -> {return new FramedBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.SNOW).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> Namako = B("namako", () -> {return new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> WattleAndDaub = B("wattle_and_daub", () -> {return new Block(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.DIRT).harvestTool(ToolType.SHOVEL).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 2.0F));});
    public static final RegistryObject<Block> WattleAndDaubSlab = B("wattle_and_daub_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.DIRT).harvestTool(ToolType.SHOVEL).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 2.0F).dynamicShape());});
    public static final RegistryObject<Block> WattleAndDaubStairs = B("wattle_and_daub_stairs", () -> {return new StairsBlock(((Block)WattleAndDaubSlab.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.GRASS, MaterialColor.DIRT).harvestTool(ToolType.SHOVEL).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 2.0F));});
    public static final RegistryObject<Block> SandCoast = B("sand_coast", () -> {return new Block(AbstractBlock.Properties.of(Material.SAND, MaterialColor.SAND).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND).harvestLevel(0).strength(0.5F, 3.0F));});
    public static final RegistryObject<Block> ThatchedBlock = B("thatched_block", () -> {return new Block(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.TERRACOTTA_YELLOW).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 3.0F));});
    public static final RegistryObject<Block> ThatchedSlab = B("thatched_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.TERRACOTTA_YELLOW).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 3.0F).dynamicShape());});
    public static final RegistryObject<Block> ThatchedStairs = B("thatched_stairs", () -> {return new StairsBlock(((Block)ThatchedBlock.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.GRASS, MaterialColor.TERRACOTTA_YELLOW).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 3.0F));});
    public static final RegistryObject<Block> ThatchedRoof45 = B("thatched_roof_45", () -> {return new Roof45Block(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.TERRACOTTA_YELLOW).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 3.0F).noOcclusion().dynamicShape());});

    public static final RegistryObject<Block> ThatchedRoof225 = B("thatched_roof_225", () -> {return new Roof225Block(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.TERRACOTTA_YELLOW).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 3.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Block> HiwadabukiBlock = B("hiwadabuki_block", () -> {return new Block(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.TERRACOTTA_BLACK).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 3.0F));});
    public static final RegistryObject<Block> HiwadabukiSlab = B("hiwadabuki_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.TERRACOTTA_BLACK).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 3.0F).dynamicShape());});
    public static final RegistryObject<Block> HiwadabukiStairs = B("hiwadabuki_stairs", () -> {return new StairsBlock(((Block)HiwadabukiBlock.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.GRASS, MaterialColor.TERRACOTTA_BLACK).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 3.0F));});
    public static final RegistryObject<Block> HiwadabukiRoof45 = B("hiwadabuki_roof_45", () -> {return new Roof45Block(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.TERRACOTTA_BLACK).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 3.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Block> HiwadabukiRoof225 = B("hiwadabuki_roof_225", () -> {return new Roof225Block(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.TERRACOTTA_BLACK).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.5F, 3.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Block> RoughStone= B("rough_stone", () -> {return new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});

    public static final RegistryObject<Block> RoughStoneSlab = B("rough_stone_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> RoughStoneStairs = B("rough_stone_stairs", () -> {return new StairsBlock(((Block)RoughStone.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> RoughStoneWall = B("rough_stone_wall", () -> {return new WallBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> Concrete = B("concrete", () -> {return new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> ConcreteSlab = B("concrete_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> ConcreteStairs = B("concrete_stairs", () -> {return new StairsBlock(((Block)Concrete.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).requiresCorrectToolForDrops().harvestLevel(0).strength(1F, 10.0F));});
    public static final RegistryObject<Block> DirtyConcrete = B("dirty_concrete", () -> {return new Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> DirtyConcreteSlab = B("dirty_concrete_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> DirtyConcreteStairs = B("dirty_concrete_stairs", () -> {return new StairsBlock(((Block)DirtyConcrete.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).requiresCorrectToolForDrops().harvestLevel(0).strength(1F, 10.0F));});
    public static final RegistryObject<Block> LidlessGroove = B("lidless_groove", () -> {return new GrooveBlock(false,AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> Groove = B("groove", () -> {return new GrooveBlock(true,AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> MeshGroove = B("mesh_groove", () -> {return new GrooveBlock(true,AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});

    public static final RegistryObject<Block> ConnectableGlass = B("connectable_glass", () -> {return new ConnectableGlassBlock(AbstractBlock.Properties.of(Material.GLASS).sound(SoundType.GLASS).harvestLevel(0).strength(0.3F, 3.0F).noOcclusion().isValidSpawn(ItemAndBlockRegister::never).isRedstoneConductor(ItemAndBlockRegister::never).isSuffocating(ItemAndBlockRegister::never).isViewBlocking(ItemAndBlockRegister::never));});
    public static final RegistryObject<Block> ConnectableGlassPane = B("connectable_glass_pane", () -> {return new ConnectableGlassPaneBlock(AbstractBlock.Properties.of(Material.GLASS).sound(SoundType.GLASS).harvestLevel(0).strength(0.3F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> MetalFramedGlass = B("metal_framed_glass", () -> {return new ConnectableGlassBlock(AbstractBlock.Properties.of(Material.GLASS).sound(SoundType.GLASS).harvestLevel(0).strength(0.3F, 3.0F).noOcclusion().isValidSpawn(ItemAndBlockRegister::never).isRedstoneConductor(ItemAndBlockRegister::never).isSuffocating(ItemAndBlockRegister::never).isViewBlocking(ItemAndBlockRegister::never));});
    public static final RegistryObject<Block> MetalFramedGlassPane = B("metal_framed_glass_pane", () -> {return new ConnectableGlassPaneBlock(AbstractBlock.Properties.of(Material.GLASS).sound(SoundType.GLASS).harvestLevel(0).strength(0.3F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> SmoothOakPlanks = B("smooth_oak_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothOakSlab = B("smooth_oak_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothOakStairs = B("smooth_oak_stairs", () -> {return new StairsBlock(((Block)SmoothOakPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> OakParapet = B("oak_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> oak_bars = B("oak_bars", () -> {return new BarsBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> oak_board_window = B("oak_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> SmoothSprucePlanks = B("smooth_spruce_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothSpruceSlab = B("smooth_spruce_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothSpruceStairs = B("smooth_spruce_stairs", () -> {return new StairsBlock(((Block)SmoothSprucePlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SpruceParapet = B("spruce_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> spruce_bars = B("spruce_bars", () -> {return new BarsBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> spruce_board_window = B("spruce_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> SmoothBirchPlanks = B("smooth_birch_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothBirchSlab = B("smooth_birch_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothBirchStairs = B("smooth_birch_stairs", () -> {return new StairsBlock(((Block)SmoothBirchPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> BirchParapet = B("birch_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> birch_bars = B("birch_bars", () -> {return new BarsBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> birch_board_window = B("birch_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> SmoothJunglePlanks = B("smooth_jungle_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothJungleSlab = B("smooth_jungle_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothJungleStairs = B("smooth_jungle_stairs", () -> {return new StairsBlock(((Block)SmoothJunglePlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> JungleParapet = B("jungle_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> jungle_bars = B("jungle_bars", () -> {return new BarsBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> jungle_board_window = B("jungle_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> SmoothAcaciaPlanks = B("smooth_acacia_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothAcaciaSlab = B("smooth_acacia_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothAcaciaStairs = B("smooth_acacia_stairs", () -> {return new StairsBlock(((Block)SmoothAcaciaPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> AcaciaParapet = B("acacia_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> acacia_bars = B("acacia_bars", () -> {return new BarsBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> acacia_board_window = B("acacia_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> SmoothDarkOakPlanks = B("smooth_dark_oak_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothDarkOakSlab = B("smooth_dark_oak_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothDarkOakStairs = B("smooth_dark_oak_stairs", () -> {return new StairsBlock(((Block)SmoothDarkOakPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> DarkOakParapet = B("dark_oak_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> dark_oak_bars = B("dark_oak_bars", () -> {return new BarsBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> dark_oak_board_window = B("dark_oak_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> green_bars= B("green_bars", () -> {return new BarsBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> GreenTatami = B("green_tatami", () -> {return new RotatedPillarBlock(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.GRASS).sound(SoundType.GRASS).harvestLevel(0).harvestTool(ToolType.HOE).strength(0.2F, 10.0F));});
    public static final RegistryObject<Block> GreenTatamiCarpet = B("green_tatami_carpet", () -> {return new TwoDirectionShapedBlock(0.0D, 0.0D, 0.0D, 16.0D, 2.0D, 16.0D,AbstractBlock.Properties.of(Material.GRASS, MaterialColor.GRASS).sound(SoundType.GRASS).harvestTool(ToolType.HOE).harvestLevel(0).strength(0.2F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> BrownTatami = B("brown_tatami", () -> {return new RotatedPillarBlock(AbstractBlock.Properties.of(Material.GRASS, MaterialColor.GRASS).sound(SoundType.GRASS).harvestLevel(0).strength(0.2F, 10.0F).harvestTool(ToolType.HOE));});
    public static final RegistryObject<Block> BrownTatamiCarpet = B("brown_tatami_carpet", () -> {return new TwoDirectionShapedBlock(0.0D, 0.0D, 0.0D, 16.0D, 2.0D, 16.0D,AbstractBlock.Properties.of(Material.GRASS, MaterialColor.GRASS).harvestTool(ToolType.HOE).sound(SoundType.GRASS).harvestLevel(0).strength(0.2F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> GoldfishBowl = B("goldfish_bowl", () -> {return new Block(AbstractBlock.Properties.of(Material.GLASS, MaterialColor.WATER).sound(SoundType.GLASS).harvestLevel(0).strength(0.2F, 10.0F).noOcclusion());});
    public static final RegistryObject<Item> UnfiredIbushiKawara = I("raw_ibushi_kawara");
    public static final RegistryObject<Item> IbushiKawara = I("ibushi_kawara");
    public static final RegistryObject<Block> IbushiKawaraBlock = B("ibushi_kawara_block", () -> {return new HorizonalRotateBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F).requiresCorrectToolForDrops());});
    public static final RegistryObject<Block> IbushiKawaraSlab = B("ibushi_kawara_slab", () -> {return new HorizonalRotateSlabBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> IbushiKawaraStairs = B("ibushi_kawara_stairs", () -> {return new StairsBlock(((Block)IbushiKawaraBlock.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> ibushi_kawara_wall= B("ibushi_kawara_wall", () -> {return new WallBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> IbushiKawaraRoof45 = B("ibushi_kawara_roof_45", () -> {return new Roof45Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).noOcclusion().dynamicShape());});

    public static final RegistryObject<Block> IbushiKawaraRoof225 = B("ibushi_kawara_roof_225", () -> {return new Roof225Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Item> CopperKawara = I("copper_kawara");
    public static final RegistryObject<Block> CopperKawaraBlock = B("copper_kawara_block", () -> {return new HorizonalRotateBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.DIRT).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F).requiresCorrectToolForDrops());});
    public static final RegistryObject<Block> CopperKawaraSlab = B("copper_kawara_slab", () -> {return new HorizonalRotateSlabBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.DIRT).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> CopperKawaraStairs = B("copper_kawara_stairs", () -> {return new StairsBlock(((Block)CopperKawaraBlock.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.STONE, MaterialColor.DIRT).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> copper_kawara_wall= B("copper_kawara_wall", () -> {return new WallBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.DIRT).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> CopperKawaraRoof45 = B("copper_kawara_roof_45", () -> {return new Roof45Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.DIRT).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).noOcclusion().dynamicShape());});

    public static final RegistryObject<Block> CopperKawaraRoof225 = B("copper_kawara_roof_225", () -> {return new Roof225Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.DIRT).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Item> OxCopperKawara = I("cupric_oxide_kawara");
    public static final RegistryObject<Block> CupricOxideKawaraBlock = B("cupric_oxide_kawara_block", () -> {return new HorizonalRotateBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.EMERALD).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).strength(1.0F, 10.0F).requiresCorrectToolForDrops());});
    public static final RegistryObject<Block> CupricOxideKawaraSlab = B("cupric_oxide_kawara_slab", () -> {return new HorizonalRotateSlabBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.EMERALD).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> CupricOxideKawaraStairs = B("cupric_oxide_kawara_stairs", () -> {return new StairsBlock(((Block)CupricOxideKawaraBlock.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.STONE, MaterialColor.EMERALD).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> cupric_oxide_kawara_wall= B("cupric_oxide_kawara_wall", () -> {return new WallBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.DIRT).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> CupricOxideKawaraRoof45 = B("cupric_oxide_kawara_roof_45", () -> {return new Roof45Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.EMERALD).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).noOcclusion().dynamicShape());});

    public static final RegistryObject<Block> CupricOxideKawaraRoof225 = B("cupric_oxide_kawara_roof_225", () -> {return new Roof225Block(AbstractBlock.Properties.of(Material.STONE, MaterialColor.EMERALD).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.0F, 10.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Block> JapaneseApricotSapling = B("japanese_apricot_sapling", () -> {return new SaplingBlock(new JapaneseApricotTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.COLOR_PINK).sound(SoundType.GRASS).noCollission().instabreak().randomTicks());});
    public static final RegistryObject<Block> JapaneseApricotLeaves = B("japanese_apricot_leaves", () -> {return new CutoutLeavesBlock(AbstractBlock.Properties.of(Material.LEAVES, MaterialColor.COLOR_PINK).strength(0.2F).randomTicks().sound(SoundType.GRASS).harvestTool(ToolType.HOE).noOcclusion().randomTicks());});
    public static final RegistryObject<Block> JapaneseApricotGlowingSapling = B("glowing_japanese_apricot_sapling", () -> {return new GlowingSaplingBlock(new GlowingJapaneseApricotTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.COLOR_PINK).sound(SoundType.GRASS).noCollission().instabreak().randomTicks().lightLevel((p_235470_0_) -> {return 15;}));});
    public static final RegistryObject<Block> JapaneseApricotGlowingLeaves = B("glowing_japanese_apricot_leaves", () -> {return new CutoutLeavesBlock(AbstractBlock.Properties.of(Material.LEAVES, MaterialColor.COLOR_PINK).strength(0.2F).harvestTool(ToolType.HOE).randomTicks().sound(SoundType.GRASS).noOcclusion().randomTicks().lightLevel((p_235470_0_) -> {return 15;}));});
    public static final RegistryObject<Block> JapaneseApricotStrippedLog = B("stripped_japanese_apricot_log", () -> {return new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> JapaneseApricotLog = B("japanese_apricot_log", () -> {return new StrippableLogBlock(JapaneseApricotStrippedLog.get(),0,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> JapaneseApricotStrippedWood = B("stripped_japanese_apricot_wood", () -> {return new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> JapaneseApricotWood = B("japanese_apricot_wood", () -> {return new StrippableLogBlock(JapaneseApricotStrippedWood.get(),0,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> JapaneseApricotPlanks = B("japanese_apricot_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> JapaneseApricotSlab = B("japanese_apricot_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> JapaneseApricotStairs = B("japanese_apricot_stairs", () -> {return new StairsBlock(((Block)JapaneseApricotPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> JapaneseApricotFence = B("japanese_apricot_fence", () -> {return new FenceBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> JapaneseApricotFenceGate = B("japanese_apricot_fence_gate", () -> {return new FenceGateBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> JapaneseApricotDoor = B("japanese_apricot_door", () -> {return new DoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> JapaneseApricotTrapdoor = B("japanese_apricot_trapdoor", () -> {return new ConnectableTrapdoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion().isValidSpawn(ItemAndBlockRegister::never));});
    public static final RegistryObject<Block> JapaneseApricotPressurePlate = B("japanese_apricot_pressure_plate", () -> {return new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> JapaneseApricotButton = B("japanese_apricot_button", () -> {return new WoodButtonBlock(AbstractBlock.Properties.of(Material.DECORATION, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> SmoothJapaneseApricotPlanks = B("smooth_japanese_apricot_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothJapaneseApricotSlab = B("smooth_japanese_apricot_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothJapaneseApricotStairs = B("smooth_japanese_apricot_stairs", () -> {return new StairsBlock(((Block)SmoothJapaneseApricotPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> JapaneseApricotParapet = B("japanese_apricot_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> japanese_apricot_board_window = B("japanese_apricot_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_PINK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Item> JapaneseApricotBark = I("japanese_apricot_bark");
    public static final RegistryObject<Block> SakuraSapling = B("sakura_sapling", () -> {return new SaplingBlock(new SakuraTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.TERRACOTTA_WHITE).sound(SoundType.GRASS).noCollission().instabreak().randomTicks());});
    public static final RegistryObject<Block> SakuraBigSapling = B("big_sakura_sapling", () -> {return new SaplingBlock(new BigSakuraTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.TERRACOTTA_WHITE).sound(SoundType.GRASS).noCollission().instabreak().randomTicks());});
    public static final RegistryObject<Block> SakuraLeaves = B("sakura_leaves", () -> {return new CutoutLeavesBlock(AbstractBlock.Properties.of(Material.LEAVES, MaterialColor.TERRACOTTA_WHITE).harvestTool(ToolType.HOE).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().randomTicks());});
    public static final RegistryObject<Block> SakuraGlowingSapling = B("glowing_sakura_sapling", () -> {return new GlowingSaplingBlock(new GlowingSakuraTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.TERRACOTTA_WHITE).sound(SoundType.GRASS).noCollission().instabreak().randomTicks().lightLevel((p_235470_0_) -> {return 15;}));});
    public static final RegistryObject<Block> SakuraGlowingBigSapling = B("glowing_big_sakura_sapling", () -> {return new GlowingSaplingBlock(new GlowingBigSakuraTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.TERRACOTTA_WHITE).sound(SoundType.GRASS).noCollission().instabreak().randomTicks().lightLevel((p_235470_0_) -> {return 15;}));});
    public static final RegistryObject<Block> SakuraGlowingLeaves = B("glowing_sakura_leaves", () -> {return new CutoutLeavesBlock(AbstractBlock.Properties.of(Material.LEAVES, MaterialColor.TERRACOTTA_WHITE).strength(0.2F).randomTicks().sound(SoundType.GRASS).harvestTool(ToolType.HOE).noOcclusion().randomTicks().lightLevel((p_235470_0_) -> {return 15;}));});
    public static final RegistryObject<Block> SakuraStrippedLog = B("stripped_sakura_log", () -> {return new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> SakuraLog = B("sakura_log", () -> {return new StrippableLogBlock(SakuraStrippedLog.get(),1,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> SakuraStrippedWood = B("stripped_sakura_wood", () -> {return new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> SakuraWood = B("sakura_wood", () -> {return new StrippableLogBlock(SakuraStrippedWood.get(),1,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> SakuraPlanks = B("sakura_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> SakuraSlab = B("sakura_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SakuraStairs = B("sakura_stairs", () -> {return new StairsBlock(((Block)SakuraPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SakuraFence = B("sakura_fence", () -> {return new FenceBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> SakuraFenceGate = B("sakura_fence_gate", () -> {return new FenceGateBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> SakuraDoor = B("sakura_door", () -> {return new DoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> SakuraTrapdoor = B("sakura_trapdoor", () -> {return new ConnectableTrapdoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion().isValidSpawn(ItemAndBlockRegister::never));});
    public static final RegistryObject<Block> SakuraPressurePlate = B("sakura_pressure_plate", () -> {return new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> SakuraButton = B("sakura_button", () -> {return new WoodButtonBlock(AbstractBlock.Properties.of(Material.DECORATION, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> SmoothSakuraPlanks = B("smooth_sakura_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothSakuraSlab = B("smooth_sakura_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothSakuraStairs = B("smooth_sakura_stairs", () -> {return new StairsBlock(((Block)SmoothSakuraPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SakuraParapet = B("sakura_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> sakura_board_window = B("sakura_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Item> SakuraBark = I("sakura_bark");
    public static final RegistryObject<Block> CypressSapling = B("cypress_sapling", () -> {return new SaplingBlock(new CypressTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.GRASS).sound(SoundType.GRASS).noCollission().instabreak().randomTicks());});
    public static final RegistryObject<Block> CypressLeaves = B("cypress_leaves", () -> {return new LeavesBlock(AbstractBlock.Properties.of(Material.LEAVES, MaterialColor.GRASS).strength(0.2F).randomTicks().sound(SoundType.GRASS).harvestTool(ToolType.HOE).noOcclusion().randomTicks());});
    public static final RegistryObject<Block> CypressStrippedLog = B("stripped_cypress_log", () -> {return new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> CypressLog = B("cypress_log", () -> {return new StrippableLogBlock(CypressStrippedLog.get(),2,AbstractBlock.Properties.of(Material.SAND, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> CypressStrippedWood = B("stripped_cypress_wood", () -> {return new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> CypressWood = B("cypress_wood", () -> {return new StrippableLogBlock(CypressStrippedWood.get(),2,AbstractBlock.Properties.of(Material.SAND, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> CypressPlanks = B("cypress_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> CypressSlab = B("cypress_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> CypressStairs = B("cypress_stairs", () -> {return new StairsBlock(((Block)CypressPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> CypressFence = B("cypress_fence", () -> {return new FenceBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> CypressFenceGate = B("cypress_fence_gate", () -> {return new FenceGateBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> CypressDoor = B("cypress_door", () -> {return new DoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> CypressTrapdoor = B("cypress_trapdoor", () -> {return new ConnectableTrapdoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion().isValidSpawn(ItemAndBlockRegister::never));});
    public static final RegistryObject<Block> CypressPressurePlate = B("cypress_pressure_plate", () -> {return new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> CypressButton = B("cypress_button", () -> {return new WoodButtonBlock(AbstractBlock.Properties.of(Material.DECORATION, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> SmoothCypressPlanks = B("smooth_cypress_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothCypressSlab = B("smooth_cypress_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothCypressStairs = B("smooth_cypress_stairs", () -> {return new StairsBlock(((Block)SmoothCypressPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> CypressParapet = B("cypress_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> cypress_board_window = B("cypress_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Item> CypressBark = I("cypress_bark");
    public static final RegistryObject<Block> japanese_cedar_sapling = B("japanese_cedar_sapling", () -> {return new SaplingBlock(new JapaneseCedarTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.GRASS).sound(SoundType.GRASS).noCollission().instabreak().randomTicks());});
    public static final RegistryObject<Block> japanese_cedar_leaves = B("japanese_cedar_leaves", () -> {return new LeavesBlock(AbstractBlock.Properties.of(Material.LEAVES, MaterialColor.GRASS).strength(0.2F).randomTicks().sound(SoundType.GRASS).harvestTool(ToolType.HOE).noOcclusion().randomTicks());});
    public static final RegistryObject<Block> stripped_japanese_cedar_log = B("stripped_japanese_cedar_log", () -> {return new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> japanese_cedar_log = B("japanese_cedar_log", () -> {return new StrippableLogBlock(stripped_japanese_cedar_log.get(),3,AbstractBlock.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> stripped_japanese_cedar_wood = B("stripped_japanese_cedar_wood", () -> {return new RotatedPillarBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> japanese_cedar_wood = B("japanese_cedar_wood", () -> {return new StrippableLogBlock(stripped_japanese_cedar_wood.get(),3,AbstractBlock.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F));});
    public static final RegistryObject<Block> japanese_cedar_planks = B("japanese_cedar_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> japanese_cedar_slab = B("japanese_cedar_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> japanese_cedar_stairs = B("japanese_cedar_stairs", () -> {return new StairsBlock(((Block)japanese_cedar_planks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> japanese_cedar_fence = B("japanese_cedar_fence", () -> {return new FenceBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> japanese_cedar_fence_gate = B("japanese_cedar_fence_gate", () -> {return new FenceGateBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> japanese_cedar_door = B("japanese_cedar_door", () -> {return new DoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> japanese_cedar_trapdoor = B("japanese_cedar_trapdoor", () -> {return new ConnectableTrapdoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion().isValidSpawn(ItemAndBlockRegister::never));});
    public static final RegistryObject<Block> japanese_cedar_pressure_plate = B("japanese_cedar_pressure_plate", () -> {return new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> japanese_cedar_button = B("japanese_cedar_button", () -> {return new WoodButtonBlock(AbstractBlock.Properties.of(Material.DECORATION, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> smooth_japanese_cedar_planks = B("smooth_japanese_cedar_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> smooth_japanese_cedar_slab = B("smooth_japanese_cedar_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> smooth_japanese_cedar_stairs = B("smooth_japanese_cedar_stairs", () -> {return new StairsBlock(((Block)smooth_japanese_cedar_planks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> japanese_cedar_parapet = B("japanese_cedar_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> japanese_cedar_board_window = B("japanese_cedar_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Item> japanese_cedar_bark = I("japanese_cedar_bark");
    public static final RegistryObject<Block> red_sapling = B("red_sapling", () -> {return new SaplingBlock(new RedTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.COLOR_RED).sound(SoundType.GRASS).noCollission().instabreak().randomTicks());});
    public static final RegistryObject<Block> red_leaves = B("red_leaves", () -> {return new CutoutLeavesBlock(AbstractBlock.Properties.of(Material.LEAVES, MaterialColor.COLOR_RED).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().harvestTool(ToolType.HOE).randomTicks());});
    public static final RegistryObject<Block> orange_sapling = B("orange_sapling", () -> {return new SaplingBlock(new OrangeTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.COLOR_ORANGE).sound(SoundType.GRASS).noCollission().instabreak().randomTicks());});
    public static final RegistryObject<Block> orange_leaves = B("orange_leaves", () -> {return new CutoutLeavesBlock(AbstractBlock.Properties.of(Material.LEAVES, MaterialColor.COLOR_ORANGE).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().harvestTool(ToolType.HOE).randomTicks());});
    public static final RegistryObject<Block> yellow_sapling = B("yellow_sapling", () -> {return new SaplingBlock(new YellowTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.COLOR_YELLOW).sound(SoundType.GRASS).noCollission().instabreak().randomTicks());});
    public static final RegistryObject<Block> yellow_leaves = B("yellow_leaves", () -> {return new CutoutLeavesBlock(AbstractBlock.Properties.of(Material.LEAVES, MaterialColor.COLOR_YELLOW).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().harvestTool(ToolType.HOE).randomTicks());});
    public static final RegistryObject<Block> LacquerSapling = B("lacquer_sapling", () -> {return new SaplingBlock(new LacquerTree(),AbstractBlock.Properties.of(Material.PLANT, MaterialColor.GRASS).sound(SoundType.GRASS).noCollission().instabreak().randomTicks());});
    public static final RegistryObject<Block> LacquerLeaves = B("lacquer_leaves", () -> {return new LeavesBlock(AbstractBlock.Properties.of(Material.LEAVES, MaterialColor.GRASS).strength(0.2F).randomTicks().sound(SoundType.GRASS).noOcclusion().harvestTool(ToolType.HOE).randomTicks());});
    public static final RegistryObject<Block> LacquerLog = B("lacquer_log", () -> {return new LacquerLogBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> ChiseledLacquerLog = B("chiseled_lacquer_log", () -> {return new ChiseledLacquerLogBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).randomTicks());});
    public static final RegistryObject<Block> RawUrushiLayer = B("raw_urushi_layer", () -> {return new RawUrushiLayerBlock(AbstractBlock.Properties.of(Material.PLANT, MaterialColor.WOOD).sound(SoundType.SLIME_BLOCK).harvestLevel(0).strength(0.1F, 1.0F).noOcclusion().noCollission());});
    public static final RegistryObject<Item> RawUrushiBall = I("raw_urushi_ball");
    public static final RegistryObject<Item> RedUrushiBall = I("red_urushi_ball");
    public static final RegistryObject<Item> BlackUrushiBall = I("black_urushi_ball");
    public static final RegistryObject<Block> RedUrushiPlanks = B("red_urushi_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> RedUrushiSlab = B("red_urushi_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> RedUrushiStairs = B("red_urushi_stairs", () -> {return new StairsBlock(((Block)RedUrushiPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> RedUrushiFence = B("red_urushi_fence", () -> {return new FenceBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> RedUrushiFenceGate = B("red_urushi_fence_gate", () -> {return new FenceGateBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> RedUrushiDoor = B("red_urushi_door", () -> {return new DoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> RedUrushiTrapdoor = B("red_urushi_trapdoor", () -> {return new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion().isValidSpawn(ItemAndBlockRegister::never));});
    public static final RegistryObject<Block> RedUrushiPressurePlate = B("red_urushi_pressure_plate", () -> {return new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> RedUrushiButton = B("red_urushi_button", () -> {return new WoodButtonBlock(AbstractBlock.Properties.of(Material.DECORATION, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> SmoothRedUrushiPlanks = B("smooth_red_urushi_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothRedUrushiSlab = B("smooth_red_urushi_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothRedUrushiStairs = B("smooth_red_urushi_stairs", () -> {return new StairsBlock(((Block)SmoothRedUrushiPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> RedUrushiParapet = B("red_urushi_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> red_urushi_board_window = B("red_urushi_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> BlackUrushiPlanks = B("black_urushi_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> BlackUrushiSlab = B("black_urushi_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> BlackUrushiStairs = B("black_urushi_stairs", () -> {return new StairsBlock(((Block)BlackUrushiPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> BlackUrushiFence = B("black_urushi_fence", () -> {return new FenceBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> BlackUrushiFenceGate = B("black_urushi_fence_gate", () -> {return new FenceGateBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> BlackUrushiDoor = B("black_urushi_door", () -> {return new DoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> BlackUrushiTrapdoor = B("black_urushi_trapdoor", () -> {return new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(2.0F, 3.0F).noOcclusion().isValidSpawn(ItemAndBlockRegister::never));});
    public static final RegistryObject<Block> BlackUrushiPressurePlate = B("black_urushi_pressure_plate", () -> {return new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> BlackUrushiButton = B("black_urushi_button", () -> {return new WoodButtonBlock(AbstractBlock.Properties.of(Material.DECORATION, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.5F, 3.0F).noCollission());});
    public static final RegistryObject<Block> SmoothBlackUrushiPlanks = B("smooth_black_urushi_planks", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> SmoothBlackUrushiSlab = B("smooth_black_urushi_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> SmoothBlackUrushiStairs = B("smooth_black_urushi_stairs", () -> {return new StairsBlock(((Block)SmoothBlackUrushiPlanks.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Block> BlackUrushiParapet = B("black_urushi_parapet", () -> {return new ParapetBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(2.0F, 3.0F));});
    public static final RegistryObject<Block> black_urushi_board_window = B("black_urushi_board_window", () -> {return new MusouRenjiMadoBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 3.0F));});
    public static final RegistryObject<Block> DoubledWoodenCabinetry = B("doubled_wooden_cabinetry", () -> {return new DoubledWoodenCabinetryBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> WoodenCabinetry = B("wooden_cabinetry", () -> {return new WoodenCabinetryBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> WoodenCabinetrySlab = B("wooden_cabinetry_slab", () -> {return new WoodenCabinetrySlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Block> DoubledRedUrushiWoodenCabinetry = B("doubled_red_urushi_wooden_cabinetry", () -> {return new DoubledWoodenCabinetryBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> RedUrushiWoodenCabinetry = B("red_urushi_wooden_cabinetry", () -> {return new WoodenCabinetryBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> RedUrushiWoodenCabinetrySlab = B("red_urushi_wooden_cabinetry_slab", () -> {return new WoodenCabinetrySlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Block> FoxHopper = B("fox_hopper", () -> {return new FoxHopperBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> dirt_furnace= B("dirt_furnace", () -> {return new DirtFurnaceBlock(AbstractBlock.Properties.of(Material.DIRT, MaterialColor.DIRT).harvestTool(ToolType.SHOVEL).sound(SoundType.GRAVEL).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Block> rice_cauldron= B("rice_cauldron", () -> {return new RiceCauldronBlock(AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_GRAY).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Block> OilExtractor = B("oil_extractor", () -> {return new OilExtractorBlock(AbstractBlock.Properties.of(Material.WOOD).sound(SoundType.WOOD).harvestLevel(0).strength(1F, 3.0F));});
    public static final RegistryObject<Item> VegetableOil = I("vegetable_oil");
    public static final RegistryObject<Block> Fryer = B("fryer", () -> {return new FryerBlock(AbstractBlock.Properties.of(Material.METAL).sound(SoundType.METAL).harvestLevel(0).requiresCorrectToolForDrops().strength(1F, 10.0F).noOcclusion().dynamicShape().isViewBlocking(ItemAndBlockRegister::never));});
    public static final RegistryObject<Item> KitsunebiItem = ITEMS.register("kitsunebi",()->{return new KitsunebiItem((new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Block> Kitsunebi = BN("kitsunebi", () -> {return new KitsunebiBlock(AbstractBlock.Properties.of(Material.STONE).sound(SoundType.BAMBOO).instabreak().noCollission().noOcclusion().lightLevel((p_235470_0_) -> {return 15;}));});
    public static final RegistryObject<Block> Andon = B("andon", () -> {return new AndonBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).sound(SoundType.WOOD).harvestLevel(0).strength(0.3F, 3.0F).noOcclusion().lightLevel((p_235470_0_) -> {return 15;}));});
    public static final RegistryObject<Block> AriakeAndon = B("ariake_andon", () -> {return new AriakeAndonBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).sound(SoundType.WOOD).harvestLevel(0).strength(0.3F, 3.0F).noOcclusion().lightLevel((p_235470_0_) -> {return 13;}));});
    public static final RegistryObject<Block> kasuga_lantern= B("kasuga_lantern", () -> {return new KasugaLanternBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).sound(SoundType.WOOD).harvestLevel(0).strength(0.3F, 3.0F).noOcclusion().lightLevel((p_235470_0_) -> {return 15;}));});
    public static final RegistryObject<Block> IronGiboshi = B("iron_giboshi", () -> {return new SimpleShapedBlock(Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).requiresCorrectToolForDrops().strength(0.5F, 30.0F).noOcclusion());});
    public static final RegistryObject<Block> GoldenGiboshi = B("gold_giboshi", () -> {return new SimpleShapedBlock(Block.box(3.0D, 0.0D, 3.0D, 13.0D, 16.0D, 13.0D),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).requiresCorrectToolForDrops().strength(0.5F, 30.0F).noOcclusion());});
    public static final RegistryObject<Block> BlankFusuma = B("blank_fusuma", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SNOW).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> BlueSeigaihaFusuma = B("blue_seigaiha_fusuma", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SNOW).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> BlueSayagataFusuma = B("blue_sayagata_fusuma", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SNOW).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> BlankAntiqueFusuma = B("blank_antique_fusuma", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SNOW).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> SlidingGlassDoor = B("sliding_glass_door", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.GLASS).sound(SoundType.GLASS).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> OakShojiPane = B("oak_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> SpruceShojiPane = B("spruce_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> BirchShojiPane = B("birch_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> JungleShojiPane = B("jungle_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> AcaciaShojiPane = B("acacia_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> DarkOakShojiPane = B("dark_oak_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> JapaneseApricotShojiPane = B("japanese_apricot_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> SakuraShojiPane = B("sakura_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> CypressShojiPane = B("cypress_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> JapaneseCedarShojiPane = B("japanese_cedar_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> RedUrushiShojiPane = B("red_urushi_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> BlackUrushiShojiPane = B("black_urushi_shoji_pane", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Block> OakShoji = B("oak_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> SpruceShoji = B("spruce_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> BirchShoji = B("birch_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> JungleShoji = B("jungle_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> AcaciaShoji = B("acacia_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> DarkOakShoji = B("dark_oak_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> JapaneseApricotShoji = B("japanese_apricot_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> SakuraShoji = B("sakura_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> CypressShoji = B("cypress_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> JapaneseCedarShoji = B("japanese_cedar_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> RedUrushiShoji = B("red_urushi_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> BlackUrushiShoji = B("black_urushi_shoji", () -> {return new SlideDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).harvestTool(ToolType.AXE).sound(SoundType.WOOD).strength(0.2F, 3.0F).noOcclusion());});
    public static final RegistryObject<Block> DeepBlueNoren = B("deep_blue_noren", () -> {return new NorenBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_BLUE).sound(SoundType.WOOD).harvestLevel(0).strength(0.2F, 1F).noCollission());});
    public static final RegistryObject<Block> RedNoren = B("red_noren", () -> {return new NorenBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).sound(SoundType.WOOD).harvestLevel(0).strength(0.2F, 1F).noCollission());});
    public static final RegistryObject<Block> CyanNoren = B("cyan_noren", () -> {return new NorenBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_CYAN).sound(SoundType.WOOD).harvestLevel(0).strength(0.2F, 1F).noCollission());});
    public static final RegistryObject<Block> MagentaNoren = B("magenta_noren", () -> {return new NorenBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_MAGENTA).sound(SoundType.WOOD).harvestLevel(0).strength(0.2F, 1F).noCollission());});
    public static final RegistryObject<Block> MenOnsenNoren = B("men_onsen_noren", () -> {return new WideNorenBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_BLUE).sound(SoundType.WOOD).harvestLevel(0).strength(0.2F, 1F).noCollission());});
    public static final RegistryObject<Block> WomenOnsenNoren = B("women_onsen_noren", () -> {return new WideNorenBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).sound(SoundType.WOOD).harvestLevel(0).strength(0.2F, 1F).noCollission());});
    public static final RegistryObject<Block> SushiNoren = B("sushi_noren", () -> {return new WideNorenBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_BLUE).sound(SoundType.WOOD).harvestLevel(0).strength(0.2F, 1F).noCollission());});
    public static final RegistryObject<Block> kakejiku_14 = B("kakejiku_14", () -> {return new KakejikuBlock(null,AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_13 = B("kakejiku_13", () -> {return new KakejikuBlock(kakejiku_14.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_12 = B("kakejiku_12", () -> {return new KakejikuBlock(kakejiku_13.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_11 = B("kakejiku_11", () -> {return new KakejikuBlock(kakejiku_12.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_10 = B("kakejiku_10", () -> {return new KakejikuBlock(kakejiku_11.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_9 = B("kakejiku_9", () -> {return new KakejikuBlock(kakejiku_10.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_8 = B("kakejiku_8", () -> {return new KakejikuBlock(kakejiku_9.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_7 = B("kakejiku_7", () -> {return new KakejikuBlock(kakejiku_8.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_6 = B("kakejiku_6", () -> {return new KakejikuBlock(kakejiku_7.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_5 = B("kakejiku_5", () -> {return new KakejikuBlock(kakejiku_6.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_4 = B("kakejiku_4", () -> {return new KakejikuBlock(kakejiku_5.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_3 = B("kakejiku_3", () -> {return new KakejikuBlock(kakejiku_4.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_2 = B("kakejiku_2", () -> {return new KakejikuBlock(kakejiku_3.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> kakejiku_1 = B("kakejiku_1", () -> {return new KakejikuBlock(kakejiku_2.get(),AbstractBlock.Properties.of(Material.WOOD, MaterialColor.TERRACOTTA_GREEN).sound(SoundType.WOOD).harvestLevel(0).instabreak().noCollission());});
    public static final RegistryObject<Block> white_futon = B("white_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> orange_futon = B("orange_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> magenta_futon = B("magenta_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> light_blue_futon = B("light_blue_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> yellow_futon = B("yellow_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> lime_futon = B("lime_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> pink_futon = B("pink_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> gray_futon = B("gray_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> light_gray_futon = B("light_gray_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> cyan_futon = B("cyan_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> purple_futon = B("purple_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> blue_futon = B("blue_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> brown_futon = B("brown_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> green_futon = B("green_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> red_futon = B("red_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Block> black_futon = B("black_futon", () -> {return new FutonBlock(DyeColor.WHITE,AbstractBlock.Properties.of(Material.WOOL, MaterialColor.WOOL).sound(SoundType.WOOL).harvestLevel(0).strength(0.3F,10F));});
    public static final RegistryObject<Item> white_cushion = ITEMS.register("white_cushion", () -> {return new CushionItem(DyeColor.WHITE,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> orange_cushion = ITEMS.register("orange_cushion", () -> {return new CushionItem(DyeColor.ORANGE,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> magenta_cushion = ITEMS.register("magenta_cushion", () -> {return new CushionItem(DyeColor.MAGENTA,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> light_blue_cushion = ITEMS.register("light_blue_cushion", () -> {return new CushionItem(DyeColor.LIGHT_BLUE,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> yellow_cushion = ITEMS.register("yellow_cushion", () -> {return new CushionItem(DyeColor.YELLOW,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> lime_cushion = ITEMS.register("lime_cushion", () -> {return new CushionItem(DyeColor.LIME,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> pink_cushion = ITEMS.register("pink_cushion", () -> {return new CushionItem(DyeColor.PINK,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> gray_cushion = ITEMS.register("gray_cushion", () -> {return new CushionItem(DyeColor.GRAY,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> light_gray_cushion = ITEMS.register("light_gray_cushion", () -> {return new CushionItem(DyeColor.LIGHT_GRAY,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> cyan_cushion = ITEMS.register("cyan_cushion", () -> {return new CushionItem(DyeColor.CYAN,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> purple_cushion = ITEMS.register("purple_cushion", () -> {return new CushionItem(DyeColor.PURPLE,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> blue_cushion = ITEMS.register("blue_cushion", () -> {return new CushionItem(DyeColor.BLUE,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> brown_cushion = ITEMS.register("brown_cushion", () -> {return new CushionItem(DyeColor.BROWN,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> green_cushion = ITEMS.register("green_cushion", () -> {return new CushionItem(DyeColor.GREEN,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> red_cushion = ITEMS.register("red_cushion", () -> {return new CushionItem(DyeColor.RED,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> black_cushion = ITEMS.register("black_cushion", () -> {return new CushionItem(DyeColor.BLACK,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});

    public static final RegistryObject<Block> CopperOre = B("copper_ore", () -> {return new OreBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.STONE).harvestTool(ToolType.PICKAXE).sound(SoundType.STONE).harvestLevel(0).requiresCorrectToolForDrops().strength(1.5F, 10.0F));});
    public static final RegistryObject<Item> CopperIngot = I("copper_ingot");
    public static final RegistryObject<Block> JapaneseTimberBamboo = B("japanese_timber_bamboo", () -> {return new JapaneseTimberBambooBlock(AbstractBlock.Properties.of(Material.PLANT, MaterialColor.GRASS).sound(SoundType.BAMBOO).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion().noCollission().randomTicks());});
    public static final RegistryObject<Block> BambooBlock = B("bamboo_block", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.BAMBOO).harvestLevel(0).strength(0.5F, 10.0F));});
    public static final RegistryObject<Block> BambooSlab = B("bamboo_slab", () -> {return new SlabBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.BAMBOO).harvestLevel(0).strength(0.5F, 10.0F).dynamicShape());});
    public static final RegistryObject<Block> BambooStairs = B("bamboo_stairs", () -> {return new StairsBlock(((Block)BambooBlock.get()).defaultBlockState(), AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.BAMBOO).harvestLevel(0).strength(0.5F, 10.0F));});

    public static final RegistryObject<Block> BambooWall = B("bamboo_wall", () -> {return new PaneBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).sound(SoundType.WOOD).harvestTool(ToolType.AXE).harvestLevel(0).strength(0.5F, 10.0F).noOcclusion());});
    public static final RegistryObject<Item> BambooCharcoal = I("bamboo_charcoal");
    public static final RegistryObject<Block> BambooCharcoalBlock = B("bamboo_charcoal_block", () -> {return new Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.BAMBOO).harvestLevel(0).strength(0.5F, 10.0F));});
    public static final RegistryObject<Block> Tawara = B("tawara", () -> {return new HorizonalRotateBlock(AbstractBlock.Properties.of(Material.PLANT, MaterialColor.DIRT).sound(SoundType.GRASS).strength(0.3F, 1.0F));});
    public static final RegistryObject<Block> PaddyField = B("paddy_field", () -> {return new FarmlandBlock(AbstractBlock.Properties.of(Material.DIRT, MaterialColor.DIRT).randomTicks().strength(0.6F).sound(SoundType.GRAVEL).isViewBlocking(ItemAndBlockRegister::always).isSuffocating(ItemAndBlockRegister::always));});
    public static final RegistryObject<Block> RiceCrop = B("rice_crop", () -> {return new RiceCropBlock(AbstractBlock.Properties.of(Material.PLANT, MaterialColor.GRASS).noCollission().randomTicks().instabreak().sound(SoundType.CROP));});
    public static final RegistryObject<Block> AzukiCrop = B("azuki_crop", () -> {return new AzukiCropBlock(AbstractBlock.Properties.of(Material.PLANT, MaterialColor.GRASS).noCollission().randomTicks().instabreak().sound(SoundType.CROP));});
    public static final RegistryObject<Block> SoyCrop = B("soy_crop", () -> {return new SoyCropBlock(AbstractBlock.Properties.of(Material.PLANT, MaterialColor.GRASS).noCollission().randomTicks().instabreak().sound(SoundType.CROP));});
    public static final RegistryObject<Item> RawRice = I("raw_rice");
    public static final RegistryObject<Item> Rice = IPF("rice",FoodsUrushi.Rice,()->EntityRegister.RiceFoodEntity.get());
    public static final RegistryObject<Item> RiceMalt = I("rice_malt");
    public static final RegistryObject<Item> RiceBall = IF("rice_ball",FoodsUrushi.RiceBall);
    public static final RegistryObject<Item> RiceCake = IF("rice_cake",FoodsUrushi.RiceCake);
    public static final RegistryObject<Item> RoastedRiceCake = IF("roasted_rice_cake",FoodsUrushi.RoastedRiceCake);
    public static final RegistryObject<Item> Gyudon = IPF("gyudon",FoodsUrushi.Gyudon,()->EntityRegister.GyudonFoodEntity.get());
    public static final RegistryObject<Item> Butadon = IPF("butadon",FoodsUrushi.Butadon,()->EntityRegister.ButadonFoodEntity.get());
    public static final RegistryObject<Item> TKG = IPF("tkg",FoodsUrushi.TKG,()->EntityRegister.TKGFoodEntity.get());
    public static final RegistryObject<Item> sekihan = IPF("sekihan",FoodsUrushi.Sekihan,()->EntityRegister.SekihanFoodEntity.get());
    public static final RegistryObject<Item> SakuraMochi = IF("sakura_mochi",FoodsUrushi.SakuraMochi);
    public static final RegistryObject<Item> Ohagi = IF("ohagi",FoodsUrushi.Ohagi);
    public static final RegistryObject<Item> KusaMochi = IF("kusa_mochi",FoodsUrushi.KusaMochi);
    public static final RegistryObject<Item> ColorDango = IF("color_dango",FoodsUrushi.ColorDango);
    public static final RegistryObject<Item> MitarashiDango = IF("mitarashi_dango",FoodsUrushi.MitarashiDango);
    public static final RegistryObject<Item> KusaDango = IF("kusa_dango",FoodsUrushi.KusaDango);
    public static final RegistryObject<Item> yokan = IF("yokan",FoodsUrushi.Yokan);
    public static final RegistryObject<Item> sakura_yokan = IF("sakura_yokan",FoodsUrushi.SakuraYokan);
    public static final RegistryObject<Item> karaage = IF("karaage",FoodsUrushi.Karaage);
    public static final RegistryObject<Item> tofu = IF("tofu",FoodsUrushi.Tofu);
    public static final RegistryObject<Item> abura_age = IF("abura_age",FoodsUrushi.AburaAge);
    public static final RegistryObject<Item> noodle_knife = ITEMS.register("noodle_knife", () -> {return new NoodleKnifeItem((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi).durability(1024));});
    public static final RegistryObject<Block> dough = B("dough", () -> {return new DoughBlock(AbstractBlock.Properties.of(Material.CLAY, MaterialColor.WOOL).sound(SoundType.WOOD).harvestLevel(0).instabreak());});
    public static final RegistryObject<Block> udon = B("udon", () -> {return new UdonBlock(AbstractBlock.Properties.of(Material.CLAY, MaterialColor.WOOL).sound(SoundType.WOOD).harvestLevel(0).instabreak());});
    public static final RegistryObject<Item> kitsune_udon = IF("kitsune_udon",FoodsUrushi.KitsuneUdon);
    public static final RegistryObject<Item> CarpBucket = ITEMS.register("carp_bucket", () -> {return new CarpBucketItem( Fluids.WATER,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> Carp = ITEMS.register("carp", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi).food(FoodsUrushi.Carp));});
    public static final RegistryObject<Item> SweetfishBucket = ITEMS.register("sweetfish_bucket", () -> {return new SweetfishBucketItem( Fluids.WATER,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> Sweetfish = ITEMS.register("sweetfish", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi).food(FoodsUrushi.Sweetfish));});
    public static final RegistryObject<Item> GoldfishBucket = ITEMS.register("goldfish_bucket", () -> {return new GoldfishBucketItem( Fluids.WATER,(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> Goldfish = ITEMS.register("goldfish", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi).food(FoodsUrushi.Goldfish));});
    public static final RegistryObject<Block> salt_and_sand = B("salt_and_sand", () -> {return new SaltAndSandBlock(AbstractBlock.Properties.of(Material.SAND, MaterialColor.SAND).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Item> salt = I("salt");
    public static final RegistryObject<Item> kanten_powder = I("kanten_powder");
    public static final RegistryObject<Item> wood_chip = I("wood_chip");
    public static final RegistryObject<Block> IronsandOre = B("ironsand_ore", () -> {return new FallingBlock(AbstractBlock.Properties.of(Material.SAND, MaterialColor.SAND).harvestTool(ToolType.SHOVEL).sound(SoundType.SAND).harvestLevel(0).strength(1.0F, 10.0F));});
    public static final RegistryObject<Item> ironsand = I("ironsand");
    public static final RegistryObject<Item> Hammer = ITEMS.register("hammer", () -> {return new HammerItem((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi).durability(1024));});
    public static final RegistryObject<Block> NormalIronIngot9 = BIron("normal_iron_ingot_9", () -> {return new IronIngotBlock(null,AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).requiresCorrectToolForDrops().strength(0.2F, 10.0F));});
    public static final RegistryObject<Block> NormalIronIngot8 = BIron("normal_iron_ingot_8", () -> {return new IronIngotBlock(NormalIronIngot9.get(),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).instabreak());});
    public static final RegistryObject<Block> NormalIronIngot7 = BIron("normal_iron_ingot_7", () -> {return new IronIngotBlock(NormalIronIngot8.get(),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).instabreak());});
    public static final RegistryObject<Block> NormalIronIngot6 = BIron("normal_iron_ingot_6", () -> {return new IronIngotBlock(NormalIronIngot7.get(),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).instabreak());});
    public static final RegistryObject<Block> NormalIronIngot5 = BIron("normal_iron_ingot_5", () -> {return new IronIngotBlock(NormalIronIngot6.get(),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).instabreak());});
    public static final RegistryObject<Block> NormalIronIngot4 = BIron("normal_iron_ingot_4", () -> {return new IronIngotBlock(NormalIronIngot5.get(),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).instabreak());});
    public static final RegistryObject<Block> NormalIronIngot3 = BIron("normal_iron_ingot_3", () -> {return new IronIngotBlock(NormalIronIngot4.get(),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).instabreak());});
    public static final RegistryObject<Block> NormalIronIngot2 = BIron("normal_iron_ingot_2", () -> {return new IronIngotBlock(NormalIronIngot3.get(),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).instabreak());});
    public static final RegistryObject<Block> NormalIronIngot1 = BIron("normal_iron_ingot_1", () -> {return new IronIngotBlock(NormalIronIngot2.get(),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).instabreak());});
    public static final RegistryObject<Block> NormalIronIngot0 = BIron("normal_iron_ingot_0", () -> {return new IronIngotBlock(NormalIronIngot1.get(),AbstractBlock.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).harvestTool(ToolType.PICKAXE).sound(SoundType.METAL).harvestLevel(0).instabreak());});
    public static final RegistryObject<Item> NormalKatanaBladeTier1 = ITEMS.register("normal_katana_blade_tier_1", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaBladeTier2 = ITEMS.register("normal_katana_blade_tier_2", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaBladeTier3 = ITEMS.register("normal_katana_blade_tier_3", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaBladeTier4 = ITEMS.register("normal_katana_blade_tier_4", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaBladeTier5 = ITEMS.register("normal_katana_blade_tier_5", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaBladeTier6 = ITEMS.register("normal_katana_blade_tier_6", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaBladeTier7 = ITEMS.register("normal_katana_blade_tier_7", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaBladeTier8 = ITEMS.register("normal_katana_blade_tier_8", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaBladeTier9 = ITEMS.register("normal_katana_blade_tier_9", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaBladeTier10 = ITEMS.register("normal_katana_blade_tier_10", () -> {return new Item((new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalHotKatanaBladeTier1 = ITEMS.register("normal_hot_katana_blade_tier_1", () -> {return new HotKatanaBladeItem(NormalKatanaBladeTier1.get(),(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalHotKatanaBladeTier2 = ITEMS.register("normal_hot_katana_blade_tier_2", () -> {return new HotKatanaBladeItem(NormalKatanaBladeTier2.get(),(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalHotKatanaBladeTier3 = ITEMS.register("normal_hot_katana_blade_tier_3", () -> {return new HotKatanaBladeItem(NormalKatanaBladeTier3.get(),(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalHotKatanaBladeTier4 = ITEMS.register("normal_hot_katana_blade_tier_4", () -> {return new HotKatanaBladeItem(NormalKatanaBladeTier4.get(),(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalHotKatanaBladeTier5 = ITEMS.register("normal_hot_katana_blade_tier_5", () -> {return new HotKatanaBladeItem(NormalKatanaBladeTier5.get(),(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalHotKatanaBladeTier6 = ITEMS.register("normal_hot_katana_blade_tier_6", () -> {return new HotKatanaBladeItem(NormalKatanaBladeTier6.get(),(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalHotKatanaBladeTier7 = ITEMS.register("normal_hot_katana_blade_tier_7", () -> {return new HotKatanaBladeItem(NormalKatanaBladeTier7.get(),(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalHotKatanaBladeTier8 = ITEMS.register("normal_hot_katana_blade_tier_8", () -> {return new HotKatanaBladeItem(NormalKatanaBladeTier8.get(),(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalHotKatanaBladeTier9 = ITEMS.register("normal_hot_katana_blade_tier_9", () -> {return new HotKatanaBladeItem(NormalKatanaBladeTier9.get(),(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalHotKatanaBladeTier10 = ITEMS.register("normal_hot_katana_blade_tier_10", () -> {return new HotKatanaBladeItem(NormalKatanaBladeTier10.get(),(new net.minecraft.item.Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaTier1 = ITEMS.register("normal_katana_tier_1", () -> {return new NormalKatanaItem(ItemTier.IRON, 0, -2.9F, (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaTier2 = ITEMS.register("normal_katana_tier_2", () -> {return new NormalKatanaItem(ItemTier.IRON, 2, -2.9F, (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaTier3 = ITEMS.register("normal_katana_tier_3", () -> {return new NormalKatanaItem(ItemTier.IRON, 4, -2.9F, (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaTier4 = ITEMS.register("normal_katana_tier_4", () -> {return new NormalKatanaItem(ItemTier.IRON, 6, -2.9F, (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaTier5 = ITEMS.register("normal_katana_tier_5", () -> {return new NormalKatanaItem(ItemTier.IRON, 8, -2.9F, (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaTier6 = ITEMS.register("normal_katana_tier_6", () -> {return new NormalKatanaItem(ItemTier.IRON, 10, -2.9F, (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaTier7 = ITEMS.register("normal_katana_tier_7", () -> {return new NormalKatanaItem(ItemTier.IRON, 12, -2.9F, (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaTier8 = ITEMS.register("normal_katana_tier_8", () -> {return new NormalKatanaItem(ItemTier.IRON, 14, -2.9F, (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaTier9 = ITEMS.register("normal_katana_tier_9", () -> {return new NormalKatanaItem(ItemTier.IRON, 16, -2.9F, (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Item> NormalKatanaTier10 = ITEMS.register("normal_katana_tier_10", () -> {return new NormalKatanaItem(ItemTier.IRON, 18, -2.9F, (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
    public static final RegistryObject<Block> rice_hokora= BN("rice_hokora", () -> {return new RIceHokoraBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Block> reiryoku_tank_tier1= BN("reiryoku_tank", () -> {return new ReiryokuTankTier1Block(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOL).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion().dynamicShape().noCollission());});
    public static final RegistryObject<Block> reiryoku_pipe= BN("reiryoku_pipe", () -> {return new ReiryokuPipeBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion().dynamicShape());});
    public static final RegistryObject<Block> reiryoku_altar= BN("reiryoku_altar", () -> {return new ReiryokuAltarBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).harvestTool(ToolType.AXE).sound(SoundType.WOOD).harvestLevel(0).strength(1.0F, 10.0F).noOcclusion().dynamicShape());});
    private static Boolean never(BlockState p_235427_0_, IBlockReader p_235427_1_, BlockPos p_235427_2_, EntityType<?> p_235427_3_) {
        return (boolean)false;
    }
    private static boolean always(BlockState p_235426_0_, IBlockReader p_235426_1_, BlockPos p_235426_2_) {
        return true;
    }
    private static boolean never(BlockState p_235436_0_, IBlockReader p_235436_1_, BlockPos p_235436_2_) {
        return false;
    }




    public ItemAndBlockRegister() {
    }
    public static void register(IEventBus eventBus) {
        ITEMS.register(eventBus);
        BLOCKS.register(eventBus);
    }
    private static <T extends Block> RegistryObject<T> B(String name,  Supplier<T > sup) {
        RegistryObject<T> object = BLOCKS.register(name, sup);
        ITEMS.register(name,() -> {return new BlockItem( Objects.requireNonNull(object.get()), (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
        return object;
    }
    private static <T extends Block> RegistryObject<T> BN(String name,  Supplier<T > sup) {
        RegistryObject<T> object = BLOCKS.register(name, sup);
        return object;
    }
    private static <T extends Block> RegistryObject<T> BIron(String name, Supplier<T > sup) {
        RegistryObject<T> object = BLOCKS.register(name, sup);
        ITEMS.register(name,() -> {return new IronIngotItem( Objects.requireNonNull(object.get()), (new Item.Properties()).tab(ModCore_Urushi.TabUrushi));});
        return object;
    }
    private static <T extends Item> RegistryObject<T> I(String name) {
        RegistryObject<Item> object = ITEMS.register(name, ()-> {
            return new Item((new Item.Properties()).tab(ModCore_Urushi.TabUrushi));
        });
        return (RegistryObject<T>) object;
    }
    private static <T extends Item> RegistryObject<T> IF(String name, Food food) {
        RegistryObject<Item> object = ITEMS.register(name, ()-> {
            return new Item((new Item.Properties()).tab(ModCore_Urushi.TabUrushi).food(food));
        });
        return (RegistryObject<T>) object;
    }
    private static <T extends Item> RegistryObject<T> IPF(String name, Food food,java.util.function.Supplier<? extends EntityType<?>> entityType) {
        RegistryObject<Item> object = ITEMS.register(name, ()-> {
            return new PlaceableFoodItem(entityType,(new Item.Properties()).tab(ModCore_Urushi.TabUrushi).food(food));
        });
        return (RegistryObject<T>) object;
    }
}
